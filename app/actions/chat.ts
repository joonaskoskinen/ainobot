"use server"

import { generateText } from "ai"
import { createGroq } from "@ai-sdk/groq"

export interface ChatMessage {
  role: "user" | "assistant"
  content: string
}

export interface EscalationInfo {
  shouldEscalate: boolean
  reason?: string
  contactInfo?: {
    phone?: string
    email?: string
    hours?: string
    urgency?: "low" | "medium" | "high"
  }
}

export async function generateAIResponse(messages: ChatMessage[], scenario: string): Promise<string> {
  try {
    // Luodaan Groq-instanssi API-avaimella
    const groq = createGroq({
      apiKey: process.env.API_KEY,
    })

    // Tarkistetaan tarvitaanko eskalaatiota
    const escalation = checkForEscalation(messages[messages.length - 1]?.content || "", scenario)

    if (escalation.shouldEscalate) {
      return generateEscalationResponse(escalation, scenario)
    }

    // M√§√§ritell√§√§n konteksti eri toimialoille
    const contexts = {
      ecommerce: `Olet TechMart Oy:n asiakaspalveluassistentti. Auta asiakkaita tuotetietojen, tilausten, palautusten ja teknisen tuen kanssa. Ole yst√§v√§llinen ja ammattimainen. Vastaa suomeksi.

T√ÑRKE√Ñ√Ñ: K√§yt√§ Markdown-muotoilua vastauksissa:
- **Lihavointi** t√§rkeille asioille
- *Kursiivi* korostukseen
- ## Otsikot eri osioille
- ‚Ä¢ Luettelot selkeytt√§m√§√§n
- \`Koodit\` teknisille termeille
- > Lainaukset t√§rkeille tiedoille

Yrityksen tiedot:
- Nimi: TechMart Oy
- Erikoisala: Elektroniikka ja tekniikka
- Palvelut: Verkkokauppa, myym√§l√§, tekninen tuki
- Toimitusajat: 1-3 arkip√§iv√§√§
- Palautusoikeus: 30 p√§iv√§√§
- Asiakaspalvelu: Ma-Pe 8-18`,

      restaurant: `Olet Ravintola Kulman varausassistentti. Auta asiakkaita p√∂yt√§varauksissa, menussa ja yleisiss√§ kysymyksiss√§. Ole l√§mminhenkinen ja palveluhenkinen. Vastaa suomeksi.

T√ÑRKE√Ñ√Ñ: K√§yt√§ Markdown-muotoilua vastauksissa:
- **Lihavointi** ruokien nimille ja hinnoille
- *Kursiivi* korostukseen
- ## Otsikot eri osioille (Menu, Varaukset, jne.)
- ‚Ä¢ Luettelot ruokavaihtoehdoille
- > Lainaukset p√§iv√§n suosituksille

Ravintolan tiedot:
- Nimi: Ravintola Kulma
- Tyyli: Moderni suomalainen keitti√∂
- Sijainti: Keskuskatu 15, Helsinki
- Aukioloajat: Ma-To 11-22, Pe-La 11-23, Su 12-21
- Erikoisuudet: Vegaaniset vaihtoehdot, kotiinkuljetus`,

      realestate: `Olet Kiinteist√∂ Koti Oy:n kiinteist√∂assistentti. Auta asiakkaita asuntojen haussa, n√§yt√∂iss√§ ja kiinteist√∂asioissa. Ole asiantunteva ja luotettava. Vastaa suomeksi.

T√ÑRKE√Ñ√Ñ: K√§yt√§ Markdown-muotoilua vastauksissa:
- **Lihavointi** hinnoille ja t√§rkeille tiedoille
- *Kursiivi* korostukseen
- ## Otsikot eri osioille (Asunnot, Hinnat, jne.)
- ‚Ä¢ Luettelot asuntojen ominaisuuksille
- > Lainaukset t√§rkeille huomioille

Yrityksen tiedot:
- Nimi: Kiinteist√∂ Koti Oy
- Palvelualue: Helsinki ja l√§hikunnat
- Palvelut: Myynti, vuokraus, arvioinnit
- Yhteisty√∂kumppanit: Pankit lainaneuvontaan
- Asiakaspalvelu: Ma-Pe 9-17, La 10-14`,

      healthcare: `Olet TerveysKeskus Plus:n ajanvarausassistentti. Auta asiakkaita ajanvarauksissa, terveyspalveluissa ja yleisneuvonnassa. Ole empaattinen ja ammattimainen. Vastaa suomeksi.

T√ÑRKE√Ñ√Ñ: K√§yt√§ Markdown-muotoilua vastauksissa:
- **Lihavointi** t√§rkeille terveystiedoille
- *Kursiivi* korostukseen
- ## Otsikot eri osioille (Ajanvaraus, Palvelut, jne.)
- ‚Ä¢ Luettelot palveluille ja hinnoille
- > Lainaukset t√§rkeille terveysohjeille

Terveysaseman tiedot:
- Nimi: TerveysKeskus Plus
- Palvelut: Yleisl√§√§k√§ri, erikoisl√§√§k√§rit, laboratorio
- Aukioloajat: Ma-Pe 7-20, La-Su 9-18
- P√§ivystys: Arkisin 8-20, viikonloppuisin 9-18
- Ajanvaraus: Puh 010-123 4567`,

      banking: `Olet Koti Pankin asiakasneuvoja. Auta asiakkaita pankkipalveluissa, lainoissa ja tileiss√§. Ole luotettava ja selke√§. Vastaa suomeksi.

T√ÑRKE√Ñ√Ñ: K√§yt√§ Markdown-muotoilua vastauksissa:
- **Lihavointi** t√§rkeille rahasummille ja koroille
- *Kursiivi* korostukseen
- ## Otsikot eri osioille (Lainat, Tilit, jne.)
- ‚Ä¢ Luettelot palveluille ja hinnoille
- > Lainaukset t√§rkeille turvallisuusohjeille

Pankin tiedot:
- Nimi: Koti Pankki
- Palvelut: Tilit, lainat, kortit, sijoitukset
- Konttorit: Helsinki, Espoo, Vantaa
- Aukioloajat: Ma-Pe 9-17
- Asiakaspalvelu: 24/7 puhelinpalvelu`,
    }

    const systemPrompt = contexts[scenario as keyof typeof contexts] || contexts.ecommerce

    const { text } = await generateText({
      model: groq("llama-3.3-70b-versatile"),
      system: systemPrompt,
      messages: messages.map((msg) => ({
        role: msg.role,
        content: msg.content,
      })),
      maxTokens: 500,
      temperature: 0.7,
    })

    return text
  } catch (error) {
    console.error("AI response error:", error)
    return "Anteeksi, tapahtui virhe. Yrit√§ hetken kuluttua uudelleen tai ota yhteytt√§ asiakaspalveluun."
  }
}

function checkForEscalation(userMessage: string, scenario: string): EscalationInfo {
  const lowerMessage = userMessage.toLowerCase()

  // Yleiset eskalaatio-avainsanat
  const generalEscalationKeywords = [
    "haluan puhua ihmiselle",
    "haluan puhua henkil√∂lle",
    "en ole tyytyv√§inen",
    "t√§m√§ ei toimi",
    "haluan valittaa",
    "t√§m√§ on kiireellinen",
    "h√§t√§tapaus",
    "en saa apua",
    "t√§m√§ ei auta",
    "haluan asiakaspalveluun",
    "soittakaa minulle",
    "tarvitsen apua heti",
  ]

  // Tarkista yleiset eskalaatio-avainsanat
  for (const keyword of generalEscalationKeywords) {
    if (lowerMessage.includes(keyword)) {
      return {
        shouldEscalate: true,
        reason: "customer_request",
        contactInfo: getContactInfo(scenario, "high"),
      }
    }
  }

  // Toimialakohtaiset eskalaatiot
  switch (scenario) {
    case "healthcare":
      const healthcareKeywords = [
        "kipu",
        "s√§rky",
        "kuume",
        "hengenahdistus",
        "rintakipu",
        "tajuttomuus",
        "verenvuoto",
        "myrkyty",
        "allerginen reaktio",
        "syd√§nkohtaus",
        "aivohalvaus",
        "vakava tapaturma",
      ]

      for (const keyword of healthcareKeywords) {
        if (lowerMessage.includes(keyword)) {
          return {
            shouldEscalate: true,
            reason: "medical_emergency",
            contactInfo: getContactInfo(scenario, "high"),
          }
        }
      }
      break

    case "banking":
      const bankingKeywords = [
        "kortti varastettu",
        "tili hakkeroitu",
        "luvaton maksu",
        "identiteettivarkaus",
        "petos",
        "huijaus",
        "v√§√§rink√§ytt√∂",
      ]

      for (const keyword of bankingKeywords) {
        if (lowerMessage.includes(keyword)) {
          return {
            shouldEscalate: true,
            reason: "security_issue",
            contactInfo: getContactInfo(scenario, "high"),
          }
        }
      }
      break

    case "ecommerce":
      const ecommerceKeywords = [
        "tuote rikki",
        "vaarallinen tuote",
        "s√§hk√∂isku",
        "tulipalo",
        "myrkyllinen",
        "allergia",
        "loukkaantuminen",
      ]

      for (const keyword of ecommerceKeywords) {
        if (lowerMessage.includes(keyword)) {
          return {
            shouldEscalate: true,
            reason: "safety_issue",
            contactInfo: getContactInfo(scenario, "high"),
          }
        }
      }
      break
  }

  return { shouldEscalate: false }
}

function getContactInfo(scenario: string, urgency: "low" | "medium" | "high") {
  const contactInfoMap = {
    ecommerce: {
      phone: "010-123-4567",
      email: "asiakaspalvelu@techmart.fi",
      hours: "Ma-Pe 8-18",
      urgency,
    },
    restaurant: {
      phone: "09-123-4567",
      email: "varaukset@ravintolakulma.fi",
      hours: "Ma-To 11-22, Pe-La 11-23, Su 12-21",
      urgency,
    },
    realestate: {
      phone: "010-456-7890",
      email: "myynti@kiinteistokoti.fi",
      hours: "Ma-Pe 9-17, La 10-14",
      urgency,
    },
    healthcare: {
      phone: urgency === "high" ? "112" : "010-123-4567",
      email: "ajanvaraus@terveysplus.fi",
      hours: urgency === "high" ? "24/7 h√§t√§numero" : "Ma-Pe 7-20, La-Su 9-18",
      urgency,
    },
    banking: {
      phone: urgency === "high" ? "0800-123-456 (24h turvalinja)" : "010-789-0123",
      email: "asiakaspalvelu@kotipankki.fi",
      hours: urgency === "high" ? "24/7 turvapalvelu" : "Ma-Pe 9-17",
      urgency,
    },
  }

  return contactInfoMap[scenario as keyof typeof contactInfoMap] || contactInfoMap.ecommerce
}

function generateEscalationResponse(escalation: EscalationInfo, scenario: string): string {
  const { contactInfo, reason } = escalation

  if (!contactInfo) return "Ota yhteytt√§ asiakaspalveluun saadaksesi lis√§apua."

  let response = ""

  // R√§√§t√§l√∂idyt viestit syyn mukaan
  switch (reason) {
    case "medical_emergency":
      response = `## üö® KIIREELLINEN TILANNE

Jos kyseess√§ on **h√§t√§tilanne**, soita heti **112**.

### Muissa kiireellisiss√§ terveysasioissa:
‚Ä¢ **Puhelin:** ${contactInfo.phone}
‚Ä¢ **S√§hk√∂posti:** ${contactInfo.email}
‚Ä¢ **Aukioloajat:** ${contactInfo.hours}

> Voin auttaa yleisneuvonnassa, mutta l√§√§ketieteelliset asiat vaativat ammattilaisen arvion.`
      break

    case "security_issue":
      response = `## üîí TURVALLISUUSASIA

Ota **v√§litt√∂m√§sti** yhteytt√§ turvapalveluumme:

### Yhteystiedot:
‚Ä¢ **Puhelin:** ${contactInfo.phone}
‚Ä¢ **S√§hk√∂posti:** ${contactInfo.email}
‚Ä¢ **Aukioloajat:** ${contactInfo.hours}

> **T√ÑRKE√Ñ√Ñ:** Jos ep√§ilet petosta tai v√§√§rink√§ytt√∂√§, √§l√§ jaa henkil√∂kohtaisia tietoja chatissa.`
      break

    case "safety_issue":
      response = `## ‚ö†Ô∏è TURVALLISUUSASIA

Turvallisuuteen liittyviss√§ asioissa ota **heti** yhteytt√§:

### Yhteystiedot:
‚Ä¢ **Puhelin:** ${contactInfo.phone}
‚Ä¢ **S√§hk√∂posti:** ${contactInfo.email}
‚Ä¢ **Aukioloajat:** ${contactInfo.hours}

> Jos tuote aiheuttaa v√§lit√∂nt√§ vaaraa, **lopeta sen k√§ytt√∂ v√§litt√∂m√§sti**.`
      break

    case "customer_request":
    default:
      response = `## üëã Yhdist√§n sinut henkil√∂kohtaiseen palveluun

Ymm√§rr√§n ett√§ tarvitset henkil√∂kohtaista apua. Ota yhteytt√§:

### Yhteystiedot:
‚Ä¢ **Puhelin:** ${contactInfo.phone}
‚Ä¢ **S√§hk√∂posti:** ${contactInfo.email}
‚Ä¢ **Aukioloajat:** ${contactInfo.hours}

*Asiakaspalvelumme auttaa sinua mielell√§√§n kaikissa asioissa!*`
      break
  }

  // Lis√§√§ toimialakohtaisia ohjeita
  switch (scenario) {
    case "healthcare":
      response += `

### üí° Vinkki
Voit my√∂s varata ajan verkossa osoitteessa **terveysplus.fi**`
      break
    case "restaurant":
      response += `

### üí° Vinkki
Kiireellisiss√§ varauksissa **soittaminen** on nopein tapa!`
      break
    case "banking":
      response += `

### üí° Muista
Pankki ei **koskaan** kysy salasanoja puhelimitse tai s√§hk√∂postitse.`
      break
  }

  return response
}
